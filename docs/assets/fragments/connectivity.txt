1. You will need the password for the `pguser` admin user to access the cluster.
    Use `kubectl get secrets` command to see the list of Secrets objects (by
    default the Secrets object you are interested in has
    `cluster1-pguser-cluster1` name). You can use the following command to get
    the password of this user:
    
    ``` {.bash data-prompt="$" }
    $ kubectl get secret cluster1-pguser-cluster1 --template='{{.data.password | base64decode}}{{"\n"}}'
    ```

2. Run a container with `psql` tool and connect its console output to your
    terminal. The following command will do this, naming the new Pod
    `pg-client`:

    ``` {.bash data-prompt="$" data-prompt-second="[postgres@pg-client /]$"}
    $ kubectl run -i --rm --tty pg-client --image=perconalab/percona-distribution-postgresql:{{ postgresrecommended }} --restart=Never -- bash -il
    [postgres@pg-client /]$ PGPASSWORD='pguser_password' psql -h cluster1-pgbouncer -p 5432 -U pguser cluster1
    ```

    Executing it may require some time to deploy the correspondent Pod.

    This command will connect you as a `pguser` user to a `cluster1` database
    via the PostgreSQL interactive terminal.

    ``` {.bash data-prompt="$" data-prompt-second="pgdb=>"}
    $ psql ({{ postgresrecommended }})
    Type "help" for help.
    pgdb=>
    ```
